diff -ru gpaw-1.3.0-org/customize.py gpaw-1.3.0/customize.py
--- gpaw-1.3.0-org/customize.py	2018-01-05 13:12:59.467477601 +0100
+++ gpaw-1.3.0/customize.py	2018-01-05 14:46:18.652871809 +0100
@@ -27,23 +27,49 @@
 
     libraries += ['somelib', 'otherlib']
 """
-
+import os
 # compiler = 'gcc'
 # mpicompiler = 'mpicc'  # use None if you don't want to build a gpaw-python
 # mpilinker = 'mpicc'
 # platform_id = ''
 # scalapack = False
+scalapack = True
+
+
+def eblibs_to_gpawlibs(eblib):
+    return [lib[2:] for lib in os.getenv(eblib).split()]
+
+
+path = os.environ.get('EBROOTPYTHON')
+extra_link_args += [' -Wl,-rpath=%s/lib' % path]
+
+path = os.environ.get('EBROOTLIBREADLINE')
+extra_link_args += [' -Wl,-rpath=%s/lib' % path]
+include_dirs += [os.path.join(path, 'include')]
+library_dirs += [os.path.join(path, 'lib')]
+libraries += ['readline']
+
+# Use BLAS and LAPACK libraries from EasyBuild
+path = os.getenv('BLAS_LAPACK_LIB_DIR')
+extra_link_args += ['-Wl,-rpath=%s' % path]
+library_dirs += [path]
+libraries += eblibs_to_gpawlibs('LIBLAPACK')
+include_dirs += [os.getenv('LAPACK_INC_DIR')]
+
 
 # Use ScaLAPACK:
 # Warning! At least scalapack 2.0.1 is required!
 # See https://trac.fysik.dtu.dk/projects/gpaw/ticket/230
 if scalapack:
-    libraries += ['scalapack-openmpi',
-                  'blacsCinit-openmpi',
-                  'blacs-openmpi']
+    path = os.getenv('SCALAPACK_LIB_DIR')
+    extra_link_args += ['-Wl,-rpath=%s' % path]
+    mpi_library_dirs += [path]
+    mpi_libraries += eblibs_to_gpawlibs('LIBSCALAPACK_ONLY')
+    include_dirs += [os.getenv('SCALAPACK_INC_DIR')]
     define_macros += [('GPAW_NO_UNDERSCORE_CBLACS', '1')]
     define_macros += [('GPAW_NO_UNDERSCORE_CSCALAPACK', '1')]
 
+
 # LibXC:
 # In order to link libxc installed in a non-standard location
 # (e.g.: configure --prefix=/home/user/libxc-2.0.1-1), use:
@@ -55,10 +81,13 @@
     if 'xc' in libraries:
         libraries.remove('xc')
 
+
 # - dynamic linking (requires rpath or setting LD_LIBRARY_PATH at runtime):
-if 0:
-    include_dirs += ['/home/user/libxc-2.0.1-1/include']
-    library_dirs += ['/home/user/libxc-2.0.1-1/lib']
+if 1:
+    path = os.environ['EBROOTLIBXC']
+    extra_link_args += ['-Wl,-rpath=%s/lib' % path]
+    include_dirs += [os.path.join(path, 'include')]
+    library_dirs += [os.path.join(path, 'lib')]
     # You can use rpath to avoid changing LD_LIBRARY_PATH:
     # extra_link_args += ['-Wl,-rpath=/home/user/libxc-2.0.1-1/lib']
     if 'xc' not in libraries:
